{"version":3,"sources":["ui/MenuList.js","ui/MenuDesktop.js","ui/MenuMobile.js","data/dataPie.js","data/dataBar.js","data/dataLine.js","routes/Home.js","routes/TimeManagemet.js","routes/IndexCopmonent.js","routes/Calendar.js","routes/Analytics.js","routes/Settings.js","App.js","serviceWorker.js","index.js"],"names":["MenuList","className","to","activeClassName","fontSize","MenuDesktop","title","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","list","width","fullList","MenuMobile","side","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","open","event","type","key","AppBar","position","Toolbar","IconButton","onClick","edge","color","aria-label","Typography","variant","Drawer","onClose","role","onKeyDown","dataPie","labels","datasets","data","backgroundColor","hoverBackgroundColor","dataBar","label","borderColor","borderWidth","dataLine","fill","lineTension","border","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","Home","legend","display","options","cutoutPercentage","TimeManagemet","IndexCopmonent","Calendar","Analytics","Settings","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38aacd6d.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\";\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nfunction MenuList() {\n  return (\n    <ul className=\"menu-list\">\n      <NavLink\n        to=\"/home\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <DataUsageIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Home\n        </li>\n      </NavLink>\n      <NavLink\n        to=\"/time\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <QueryBuilderIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Time management\n        </li>\n      </NavLink>\n      <NavLink\n        to=\"/index\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <InboxIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Index\n        </li>\n      </NavLink>\n      <NavLink\n        to=\"/calendar\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <TodayIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Calendar\n        </li>\n      </NavLink>\n      <NavLink\n        to=\"/analytics\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <TimelineIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Analytics\n        </li>\n      </NavLink>\n      <NavLink\n        to=\"/settings\"\n        className=\"menu-list__link\"\n        activeClassName=\"menu-list__link-active\">\n        <li className=\"menu-list__item\">\n          <SettingsIcon\n            fontSize=\"inherit\"\n            className=\"menu-list__icon\"\n          />\n          Settings\n        </li>\n      </NavLink>\n\n    </ul>\n  );\n}\n\nexport default MenuList;\n","import React from 'react';\nimport MenuList from \"./MenuList\";\n\nconst MenuDesktop = () => {\n  return (\n    <div className=\"menu-desktop\">\n      <div className=\"menu-desktop__title-block\">\n        <h3 className=\"menu-desktop__title-text\" title=\"Присоединяйся!\">Работа мечты</h3>\n      </div>\n      <MenuList/>\n    </div>\n  );\n};\n\nexport default MenuDesktop;\n","import React from 'react';\nimport MenuList from \"./MenuList\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\nconst MenuMobile = () => {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <MenuList/>\n    </div>\n  );\n  return (\n    <div className=\"menu-mobile\">\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            onClick={toggleDrawer('left', true)}\n            edge=\"start\" className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Работа Мечты\n          </Typography>\n        </Toolbar>\n\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n          {sideList('left')}\n        </Drawer>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default MenuMobile;\n","const dataPie = {\n  labels: [\n    'Да',\n    'Нет',\n  ],\n  datasets: [{\n    data: [50, 50],\n    backgroundColor: [\n      '#f2651e',\n      '#ffe401',\n    ],\n    hoverBackgroundColor: [\n      '#f2651e',\n      '#ffe401',\n    ],\n  }]\n};\n\nexport default dataPie;\n","const dataBar = {\n  labels: ['Всего', 'Закрыто', 'В работе', 'Новый', 'Просрочен'],\n  datasets: [\n    {\n      label: 'Please, hire me!',\n      backgroundColor: [\n        'rgba(255, 135, 161, 0.3)',\n        'rgba(95, 181, 239, 0.3)',\n        'rgba(255, 216, 119, 0.3)',\n        'rgba(100, 201, 201, 0.3)',\n        'rgba(168, 129, 245, 0.3)',\n      ],\n      borderColor: [\n        '#ff87a1',\n        '#5fb5ef',\n        '#ffd877',\n        '#64c9c9',\n        '#a881f5',\n      ],\n      borderWidth: 1,\n      data: [950, 820, 30, 40, 200, 2000]\n    }\n  ]\n};\n\nexport default dataBar;\n","const pinkColor = 'rgba(227, 69, 140, 0.7)';\nconst purpleColor = 'rgba(140, 94, 231, 0.7)';\n\nconst dataLine = {\n  labels: ['30.05', '31.05', '01.06', '02.06', '03.06', '04.06', '05.06', '06.06', '07.06', '08.06', '09.06',],\n  datasets: [\n    {\n      label: '',\n      fill: true,\n      lineTension: 0.5,\n      backgroundColor: pinkColor,\n      border: 'none',\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'round',\n      pointBorderColor: 'rgba(0, 0, 0, 0)',\n      pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n      pointBorderWidth: 0,\n      pointHoverRadius: 6,\n      pointHoverBackgroundColor: 'white',\n      pointHoverBorderColor: 'gray',\n      pointHoverBorderWidth: 3,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [40, 50, 35, 3, 49, 28, 31, 40, 35, 30, 55]\n    },\n    {\n      label: '',\n      fill: true,\n      lineTension: 0.5,\n      backgroundColor: purpleColor,\n      borderColor: 'rgba(0, 0, 0, 0)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'round',\n      pointBorderColor: 'rgba(0, 0, 0, 0)',\n      pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n      pointBorderWidth: 0,\n      pointHoverRadius: 6,\n      pointHoverBackgroundColor: 'white',\n      pointHoverBorderColor: 'gray',\n      pointHoverBorderWidth: 3,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [20, 28, 50, 54, 30, 12, 15, 20, 55, 60, 55]\n    }\n  ]\n};\n\nexport default dataLine;\n","import React from 'react';\n\nimport { HorizontalBar, Line, Doughnut} from 'react-chartjs-2';\nimport dataPie from \"../data/dataPie\";\nimport dataBar from \"../data/dataBar\";\nimport dataLine from \"../data/dataLine\";\n\nconst Home = () => {\n\n  return (\n    <div className=\"main\">\n      <div className=\"main__gray-line\"></div>\n      <div className=\"main__title-block\">\n        <h2 className=\"main__title-block--title\">\n          Hi Filip\n        </h2>\n        <h4 className=\"main__title-block--subtitle\">\n          Checkout your latest projects and their progress.\n        </h4>\n      </div>\n\n      <div className=\"charts\">\n        <div className=\"charts__block charts__line\">\n          <div className=\"charts__title-block\">\n            <div className=\"charts__title-block--wrapper\">\n              <h2 className=\"charts__title-block--title\">\n              Wavy Lines\n            </h2>\n              <h4 className=\"charts__title-block--subtitle\">\n                Working Hours\n              </h4>\n            </div>\n            <div className=\"charts__title-block--wrapper\">\n              <p className=\"charts__title-block--option\">This week</p>\n            </div>\n          </div>\n          <Line data={dataLine} legend={{display: false}}/>\n        </div>\n\n        <div className=\"charts__block charts__pie\">\n          <Doughnut data={dataPie} legend={{position: 'right'}} options={{cutoutPercentage: 80}}/>\n        </div>\n\n        <div className=\"charts__block charts__bar\">\n          <HorizontalBar data={dataBar} legend={{display: false}}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nconst TimeManagemet = () => {\n  return (\n    <div className=\"soon\">\n      <span role=\"img\" aria-label=\"eyes\">🚧 </span>\n      Soon\n      <span role=\"img\" aria-label=\"eyes\"> 🚧</span>\n    </div>\n  );\n};\n\nexport default TimeManagemet;\n","import React from 'react';\n\nconst IndexCopmonent = () => {\n  return (\n    <div className=\"soon\">\n      <span role=\"img\" aria-label=\"eyes\">🚧 </span>\n      Soon\n      <span role=\"img\" aria-label=\"eyes\"> 🚧</span>\n    </div>\n  );\n};\n\nexport default IndexCopmonent;\n","import React from 'react';\n\nconst Calendar = () => {\n  return (\n    <div className=\"soon\">\n      <span role=\"img\" aria-label=\"eyes\">🚧 </span>\n      Soon\n      <span role=\"img\" aria-label=\"eyes\"> 🚧</span>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React from 'react';\n\nconst Analytics = () => {\n  return (\n    <div className=\"soon\">\n      <span role=\"img\" aria-label=\"eyes\">🚧 </span>\n      Soon\n      <span role=\"img\" aria-label=\"eyes\"> 🚧</span>\n    </div>\n  );\n};\n\nexport default Analytics;\n","import React from 'react';\n\nconst Settings = () => {\n  return (\n    <div className=\"soon\">\n      <span role=\"img\" aria-label=\"eyes\">🚧 </span>\n      Soon\n      <span role=\"img\" aria-label=\"eyes\"> 🚧</span>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport './styles/styles.css';\n\nimport MenuDesktop from \"./ui/MenuDesktop\";\nimport MenuMobile from \"./ui/MenuMobile\";\nimport Home from \"./routes/Home\";\nimport TimeManagemet from \"./routes/TimeManagemet\";\nimport IndexCopmonent from \"./routes/IndexCopmonent\";\nimport Calendar from \"./routes/Calendar\";\nimport Analytics from \"./routes/Analytics\";\nimport Settings from \"./routes/Settings\";\n\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n       <div className=\"app__menu\">\n         <MenuDesktop/>\n\n         <MenuMobile/>\n       </div>\n\n        <Switch>\n          <Route path=\"/home\">\n            <Home/>\n          </Route>\n          <Route path=\"/time\">\n            <TimeManagemet/>\n          </Route>\n          <Route path=\"/index\">\n            <IndexCopmonent/>\n          </Route>\n          <Route path=\"/calendar\">\n            <Calendar/>\n          </Route>\n          <Route path=\"/analytics\">\n            <Analytics/>\n          </Route>\n          <Route path=\"/settings\">\n            <Settings/>\n          </Route>\n          <Route path=\"*\">\n            <Redirect to=\"/home\"/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}